/*! 
 * usefulutility - v0.1.0
 * Build Time: Sunday, August 31st, 2014, 12:48:03 AM
 * Copyright (c) 2014 shaoke<shaokexu@gmail.com>;
 */
"use strict";!function(window){function sortedArrayUsingComparator(arr,arrComparator,bDescend){function getComparatorValue(item,arrComparator){var i,tmpValue=item;for(arrComparator=arrComparator||[],i=0;i<arrComparator.length;i++)tmpValue=tmpValue[arrComparator[i].toString()];return tmpValue.toString()}function compare(item1,item2,arrComparator){var comparatorValue1,comparatorValue2;return arrComparator=arrComparator||[],comparatorValue1=getComparatorValue(item1,arrComparator[0]),comparatorValue2=getComparatorValue(item2,arrComparator[0]),comparatorValue1>comparatorValue2?1:comparatorValue1==comparatorValue2?arrComparator.slice(1).length>0?compare(item1,item2,arrComparator.slice(1)):0:-1}var i,j,tmpItem,tmpComparator,tmpArr=angular.copy(arr);for(Array.isArray(arrComparator)||(arrComparator=arrComparator?[arrComparator]:[]),Array.isArray(arrComparator[0])||(tmpComparator=[],tmpComparator[0]=arrComparator,arrComparator=tmpComparator),i=0;i<tmpArr.length;i++)for(j=i+1;j<tmpArr.length;j++)compare(tmpArr[i],tmpArr[j],arrComparator)>0&&(tmpItem=void 0,tmpItem=tmpArr[j],tmpArr[j]=void 0,tmpArr[j]=tmpArr[i],tmpArr[i]=tmpItem);return bDescend&&(tmpArr=tmpArr.reverse()),tmpArr}var U2=function(){return this};U2.prototype.sortedArrayUsingComparator=sortedArrayUsingComparator,window.u2=new U2}(window);